---
- name: setup jenkins server
  hosts: all

  vars:
    jenkins2_configure_by_groovy: false
    jenkins2_configure_by_casc: true
    jenkins2_plugins_suggested:
      - ant
      - antisamy-markup-formatter
      - authorize-project
      - build-timeout
      - cloudbees-folder
      - configuration-as-code
      - job-dsl
      - credentials-binding
      - email-ext
      - git
      - gradle
      - ldap
      - mailer
      - matrix-auth
      - pam-auth
      - pipeline-github-lib
      - pipeline-stage-view
      - ssh-slaves
      - ssh-agent
      - timestamper
      - workflow-aggregator
      - ws-cleanup
      - kubernetes-cli
      - docker-workflow
      - warnings-ng
      - permissive-script-security
      - branch-api
      - blueocean
      - blueocean-github-pipeline
      - github
      - github-api
      - github-branch-source
      - github-oauth
      - github-checks
      - pipeline-github-lib

    jenkins2_jcasc_config:
      credentials:
        system:
          domainCredentials:
            - credentials:
              - basicSSHUserPrivateKey:
                  id: "jenkins-agents"
                  scope: GLOBAL
                  username: "{{ agent_user }}"
                  privateKeySource:
                    directEntry:
                      privateKey: |
                        {{ agent_ssh_private_key }}
              - usernamePassword:
                  id: "github-pat"
                  username: "{{ github_username }}"
                  password: "{{ github_pat }}"
              - usernamePassword:
                  id: "dockerhub-access-token"
                  username: "{{ dockerhub_access_user }}"
                  password: "{{ dockerhub_access_token }}"
              - string:
                  id: "lw-access-token"
                  secret: "{{ lacework_scanner_token }}"
                  description: "lw access token"
              - string:
                  id: "lw-account-name"
                  secret: "{{ lacework_account_name }}"
                  description: "lw account name"
              - string:
                  id: "k8s-cluster-name"
                  secret: "{{ k8s_cluster_name }}"
              - string:
                  id: "k8s-context-name"
                  secret: "{{ k8s_context_name }}"
              - string:
                  id: "k8s-server-url"
                  secret: "{{ k8s_server_url }}"
              - string:
                  id: "k8s-build-robot-token"
                  secret: "{{ k8s_build_robot_token }}"
      jenkins:
        securityRealm:
          local:
            allowsSignup: false
            users:
             - id: "{{ jenkins_admin_id }}"
               password: "{{ jenkins_admin_pass }}"
             - id: "{{ jenkins_ro_id }}"
               password: "{{ jenkins_ro_pass }}"
        authorizationStrategy:
          globalMatrix:
            permissions:
              - "Overall/Administer:{{ jenkins_admin_id }}"
              - "Overall/Read:authenticated"
              - "Overall/Read:{{ jenkins_ro_id }}"
              - "Job/Read:{{ jenkins_ro_id }}"
              - "View/Read:{{ jenkins_ro_id }}"
      security:
        globaljobdslsecurityconfiguration:
          useScriptSecurity: false
        queueItemAuthenticator:
          authenticators:
          - global:
              strategy: "triggeringUsersAuthorizationStrategy"
      unclassified:
        location:
          url: http://${SERVER}:8080/
      jobs:
        - script: >
            job('Job_DSL_Seed') {
              scm {
                git {
                  remote {
                    url 'https://github.com/lacework-dev/detc-resources.git'
                  }
                }
              }
              steps {
                jobDsl {
                  targets 'apps/jenkins/job-seeds/**/*.groovy'
                }
              }
            }

  tasks:
    - name: Update apt repo and cache on all Debian/Ubuntu boxes
      apt: update_cache=yes force_apt_get=yes cache_valid_time=3600
      become: true
    - name: Setup SSH pub/priv keys pair
      openssh_keypair:
        path: "~/.ssh/id_rsa"
        type: rsa
        size: 4096
        state: present
        force: no
      register: public_key
      become: false
    - name: copy ssh pub key locally
      local_action:
        module: copy
        content: "{{ public_key.public_key }}"
        dest: public_key
      become: false

  roles:
    - role: geerlingguy.java
      when: "ansible_os_family == 'Debian'"
      java_packages:
        - openjdk-11-jdk
    - role: lean_delivery.jenkins
