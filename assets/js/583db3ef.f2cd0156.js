"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[363],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=p(n),f=o,m=d["".concat(c,".").concat(f)]||d[f]||l[f]||i;return n?r.createElement(m,a(a({ref:t},u),{},{components:n})):r.createElement(m,a({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var p=2;p<i;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5073:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return u},default:function(){return d}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],s={title:"Extensions"},c=void 0,p={unversionedId:"extensions/index",id:"extensions/index",title:"Extensions",description:"The extension resources found in the DETC catalog are 'Wrapper Extensions'. For details about all extension types, see",source:"@site/docs/extensions/index.md",sourceDirName:"extensions",slug:"/extensions/",permalink:"/extensions/",editUrl:"https://github.com/lacework-dev/detc-resources/tree/main/docs/docs/extensions/index.md",tags:[],version:"current",frontMatter:{title:"Extensions"},sidebar:"mainSidebar",previous:{title:"GKE",permalink:"/plans/infrastructure/k8s/gke"},next:{title:"azurecompute",permalink:"/extensions/compute/azurecompute"}},u=[{value:"Wrapper Extensions",id:"wrapper-extensions",children:[],level:3}],l={toc:u};function d(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The extension resources found in the DETC catalog are 'Wrapper Extensions'. For details about all extension types, see\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"detc")," tool documentation ",(0,i.kt)("a",{parentName:"p",href:"https://lacework-dev.github.io/detc/extensions"},"here")),(0,i.kt)("h3",{id:"wrapper-extensions"},"Wrapper Extensions"),(0,i.kt)("p",null,"A wrapper extension 'wraps' a core extension. They are defined in YAML and reside in the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/lacework-dev/detc-resources"},"detc-resources")," repository. The purpose of wrapper extension is to package some code into a re-usable unit called in a step. For example, the EKS extension is actually a wrapper extension that uses the Terraform extension to deploy EKS. Common use cases can be created as wrapper extensions and simplify their re-use."))}d.isMDXComponent=!0}}]);