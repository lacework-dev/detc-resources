---
VoteAppAKS:
  required_secrets:
    - path: windows.username
      prompt: true
    - path: windows.password
      prompt: true
    - path: lacework.access_token
      prompt: true
    - path: lacework.deploy_agent
      default: true
    - path: lacework.api_url
      description: lacework API url
      default: https://agent.lacework.net
  needs:
    - azure-k8s
  steps:
    - name: voteapp
      extension: Kubectl
      tags: applications
      source:
        location: https://raw.githubusercontent.com/lacework-dev/detc-resources/main/apps/voteapp/k8s/voteapp-azure.yml
      helpers:
        - helper: WriteValue
          run_on_dryrun: true
          args:
            raw_value: !lookup /azure-k8s/k8s/outputs/kubectl_config
            dstfile: kubectl
        - helper: GenerateOutput
          lifecycle: [ afterCreate ]
          args:
            dst: "vote_app_url"
            format: "http://{{ .vote }}:{{ .vote_port }}"
        - helper: GenerateOutput
          lifecycle: [ afterCreate ]
          args:
            dst: "result_app_url"
            format: "http://{{ .result }}:{{ .result_port }}"
      args:
        kubectl_config_file: kubectl
        kube_manifest_path: voteapp-azure.yml
        wait_for:
          voteapp-db:
            resource_type: "pods"
            json_path: '{.items[?(@.metadata.labels.app == "voteapp-db")].status.podIP}'
          voteapp-redis:
            resource_type: "pods"
            json_path: '{.items[?(@.metadata.labels.app == "voteapp-redis")].status.podIP}'
          vote:
            resource_type: svc
            resource_name: voteapp-vote
            json_path: "{.status.loadBalancer.ingress[0].ip}"
          result:
            resource_type: svc
            resource_name: voteapp-result
            json_path: "{.status.loadBalancer.ingress[0].ip}"
          vote_port:
            resource_type: svc
            resource_name: voteapp-vote
            json_path: "{.spec.ports[0].port}"
          result_port:
            resource_type: svc
            resource_name: voteapp-result
            json_path: "{.spec.ports[0].port}"
    - name: instance
      extension: AzureCompute
      tags: infra
      needs:
        - voteapp
      args:
        region: !secret azure.region
        instance_name: "vote-traffic"
    - name: voteapp-worker-instance
      extension: AzureWindows
      needs:
        - voteapp
      args:
        region: !secret azure.region
        password: !secret windows.password
        username: !secret windows.username
        instance_name: "voteapp-worker"
        subnet_id: !lookup /azure-k8s/k8s/outputs/cluster_subnet_id
        tags: '{"deployment" = "voteapp", "environment" = "production", "type" = "compute", security= "internet-exposed"}'
        sg_tags: '{"deployment" = "voteapp", "environment" = "production", "type" = "network", security= "internet-exposed"}'
    - name: traffic
      extension: Ansible
      source: https://raw.githubusercontent.com/lacework-dev/detc-resources/main/apps/traffic/install_traffic.yml
      tags: traffic
      needs:
        - instance
      helpers:
        - helper: ServiceAvailable
          args:
            max_wait: 60 # seconds
            hostname: !lookup /instance/outputs/ip
            port: 22
        - helper: WriteValue
          run_on_dryrun: true
          args:
            raw_value: !lookupSecret /instance/outputs/ssh_key
            dstfile: instance.ssh_key
            mode: 0600
      args:
        user: "ubuntu"
        private_key: instance.ssh_key
        inventory: !lookup /instance/outputs/ip
        playbook: install_traffic.yml
        privilege_escalation:
          become: true
        extra_vars:
          vote_app_url: !lookup /voteapp/outputs/vote_app_url
          result_app_url: !lookup /voteapp/outputs/result_app_url
    - name: voteapp-worker-provision
      extension: Ansible
      source:
        - location: "git+https://github.com/lacework-dev/detc-resources.git"
          subdir: "apps/voteapp/ansible"
        - location: "git+https://github.com/lacework-dev/detc-resources.git"
          subdir: "util/laceworkagent/ansible"
      needs:
        - voteapp-worker-instance
      helpers:
        - helper: ServiceAvailable
          args:
            hostname: !lookup /voteapp-worker-instance/outputs/ip
            port: 5986
      args:
        inventory: !lookup /voteapp-worker-instance/outputs/ip
        user: !lookup /voteapp-worker-instance/outputs/user
        winrm: true
        winrm_password: !lookupSecret /voteapp-worker-instance/outputs/password
        playbook:
          - voteapp_worker.yml
          - agent.yaml
        extra_vars:
          lacework_deploy_agent: !secret lacework.deploy_agent
          lacework_access_token: !secret lacework.access_token
          lacework_api_server: !secret lacework.api_url
          windows_password: !secret windows.password
          windows_username: !secret windows.username
          db_pod_ip: !lookup /voteapp/outputs/voteapp-db
          redis_pod_ip: !lookup /voteapp/outputs/voteapp-redis
